1. Functions:
   - Learn to declare and call functions.
   - Understand the difference between function declarations and expressions.
   - Explore arrow functions (`=>`) and the concept of parameters and return values.

2. DOM Manipulation:
   - Learn how to select elements using `getElementById`, `querySelector`, and `querySelectorAll`.
   - Understand how to add, remove, and modify HTML elements and attributes.
   - Learn how to handle events (e.g., `click`, `mouseover`, `submit`) with `addEventListener`.

****************************************************************************************************************************

1.1 Functions - Learn to declare and call functions.
=====================================================

1.1.1 Basic Function Declaration & Calling - javascript
// Function Declaration
function greet(name) {
    console.log(`Hello, ${name}!`);
}

// Function Call
greet("Yogesh"); // Output: Hello, Yogesh!

---

 1.1.2 Function with Return Value - javascript

function add(a, b) {
    return a + b;
}

// Calling function and storing the result

let sum = add(5, 3);
console.log("Sum:", sum); // Output: Sum: 8


---

 1.1.3 Anonymous Function (Function Expression) - javascript

const multiply = function (x, y) {
    return x  y;
};

// Calling the function
console.log(multiply(4, 6)); // Output: 24

---

1.1.4 Arrow Function (Modern JavaScript) - javascript

const subtract = (a, b) => a - b;

// Calling the function
console.log(subtract(10, 3)); // Output: 7
```

---

1.1.5 Function with Default Parameters - javascript

function greetUser(name = "Guest") {
    console.log(`Welcome, ${name}!`);
}

// Calling with and without arguments
greetUser("Yogesh"); // Output: Welcome, Yogesh!
greetUser();         // Output: Welcome, Guest!
```

---

1.1.6 Immediately Invoked Function Expression (IIFE) - javascript

(function () {
    console.log("This function runs immediately!");
})(); // Output: This function runs immediately!
```

---

1.1.7 Function with Rest Parameters (`...args`) - javascript

function sumAll(...numbers) {
    return numbers.reduce((total, num) => total + num, 0);
}

// Calling with multiple arguments
console.log(sumAll(1, 2, 3, 4, 5)); // Output: 15

********************************************************************************************************************

1.2. Functions - Understand the difference between function declarations and expressions.
========================================================================================

// Function Declaration
function greet() {
    console.log("Hello from a function declaration!");
}

// Calling the function declaration (can be called before or after its definition)
greet(); 

// Function Expression (Anonymous)
const greetExpression = function() {
    console.log("Hello from a function expression!");
};

// Calling the function expression (must be called after its definition)
greetExpression(); 

// Function Expression (Named)
const namedGreetExpression = function sayHello() {
    console.log("Hello from a named function expression!");
};

// Calling the named function expression
namedGreetExpression();

// Trying to call sayHello() directly would result in an error because it’s scoped within the expression
// sayHello(); // ❌ Uncaught ReferenceError: sayHello is not defined


